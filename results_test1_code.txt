sample 1:
Sat formula is: Implies(Implies(trainLate & ~taxi, johnLate), Implies(~johnLate, Implies(trainLate, taxi)))
writing cnf formula from sat : (johnLate | taxi | trainLate | ~trainLate) & (johnLate | taxi | ~johnLate | ~trainLate) & (johnLate | taxi | ~taxi | ~trainLate)
dimac structure of the sat is [[1, 3, 2, -2], [1, 3, -1, -2], [1, 3, -3, -2]]

checking sematic entailment for variables in the clause.....
{johnLate: 1, trainLate: 2, taxi: 3}
redundant sub formulas in the main formula is/are:
[johnLate, False, [1, 3, 2, -2], johnLate, False, [1, 3, -1, -2], johnLate, False, [1, 3, -3, -2]]
[johnLate, True, [1, 3, 2, -2], johnLate, True, [1, 3, -1, -2], johnLate, True, [1, 3, -3, -2]]
[trainLate, False, [1, 3, 2, -2], trainLate, False, [1, 3, -1, -2], trainLate, False, [1, 3, -3, -2]]
[trainLate, True, [1, 3, 2, -2], trainLate, True, [1, 3, -1, -2], trainLate, True, [1, 3, -3, -2]]
[taxi, False, [1, 3, 2, -2], taxi, False, [1, 3, -1, -2], taxi, False, [1, 3, -3, -2]]
[taxi, True, [1, 3, 2, -2], taxi, True, [1, 3, -1, -2], taxi, True, [1, 3, -3, -2]]
these are individually redundant at a time i.e when one is not present then only these particular sub formulas are redundant

sample 2:
Sat formula is: (A | B) & (C | ~B)
writing cnf formula from sat : (A | B) & (C | ~B)
dimac structure of the sat is [[3, 2], [1, -2]]

checking sematic entailment for variables in the clause.....
{C: 1, B: 2, A: 3}
redundant sub formulas in the main formula is/are:
[C, True, [1, -2]]
[B, True, [3, 2], B, True, [1, -2]]
[A, True, [3, 2]]
these are individually redundant at a time i.e when one is not present then only these particular sub formulas are redundant